[
    {
        "id": "edaab067.2ce7c",
        "type": "tab",
        "label": "UPLINK",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c0a3af32.984d7",
        "type": "tab",
        "label": "NODESMAN",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3ade52c6.ecefae",
        "type": "mqtt-broker",
        "name": "LORAWAN",
        "broker": "localhost",
        "port": "1885",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "compatmode": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "6db41ac2.0cbf34",
        "type": "json",
        "z": "edaab067.2ce7c",
        "name": "JSON",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 250,
        "y": 80,
        "wires": [
            [
                "c24c2e352c2b69e8"
            ]
        ]
    },
    {
        "id": "974850fb.3ee4e",
        "type": "mqtt in",
        "z": "edaab067.2ce7c",
        "name": "LDDS75",
        "topic": "ldds75",
        "qos": "2",
        "datatype": "auto",
        "broker": "3ade52c6.ecefae",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 100,
        "y": 80,
        "wires": [
            [
                "6db41ac2.0cbf34"
            ]
        ]
    },
    {
        "id": "14ffaad5.b12e65",
        "type": "function",
        "z": "edaab067.2ce7c",
        "name": "ENRICH",
        "func": "msg.key = msg.payload.desc;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 200,
        "wires": [
            [
                "73291680.27a758",
                "d6b02545.019098"
            ]
        ]
    },
    {
        "id": "d6b02545.019098",
        "type": "debug",
        "z": "edaab067.2ce7c",
        "name": "DBG",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 360,
        "wires": []
    },
    {
        "id": "73291680.27a758",
        "type": "http request",
        "z": "edaab067.2ce7c",
        "name": "TB",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/api/v1/{{{key}}}/telemetry",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 850,
        "y": 200,
        "wires": [
            [
                "d6b02545.019098"
            ]
        ]
    },
    {
        "id": "c24c2e352c2b69e8",
        "type": "function",
        "z": "edaab067.2ce7c",
        "name": "decode",
        "func": "let data = msg.payload.data;\nfunction toHexString(hex) {\n    for (var bytes = [], c = 0; c < hex.length; c += 2)\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n    return bytes;\n}\n\nfunction Decoder(bytes) {\n    // Decode an uplink message from a buffer\n    // (array) of bytes to an object of fields.\n    var val = toHexString(bytes);\n    var value = (val[0] << 8 | val[1]) & 0x3FFF;\n    var batV = value / 1000;//Battery,units:V\n\n    value = val[2] << 8 | val[3];\n    var distance = (value);//distance,units:mm\n\n    var i_flag = val[4];\n\n    value = val[5] << 8 | val[6];\n    if (val[5] & 0x80) { value |= 0xFFFF0000; }\n    var temp_DS18B20 = (value / 10).toFixed(2);//DS18B20,temperature  \n\n    var s_flag = val[7];\n    return {\n        Bat: batV,\n        Distance: distance,\n        Interrupt_flag: i_flag,\n        TempC_DS18B20: temp_DS18B20,\n        Sensor_flag: s_flag,\n    };\n}\nmsg.payload.distance = Decoder(data).Distance\nmsg.payload.tempC = Decoder(data).TempC_DS18B20\nmsg.payload.batv = Decoder(data).Bat\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 80,
        "wires": [
            [
                "14ffaad5.b12e65"
            ]
        ]
    },
    {
        "id": "ecad0a9a247f5b75",
        "type": "mqtt in",
        "z": "edaab067.2ce7c",
        "name": "LHT65",
        "topic": "lht65",
        "qos": "2",
        "datatype": "auto",
        "broker": "3ade52c6.ecefae",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 90,
        "y": 180,
        "wires": [
            [
                "61853fed5a2f3270"
            ]
        ]
    },
    {
        "id": "bc4255ec58b43fd2",
        "type": "mqtt in",
        "z": "edaab067.2ce7c",
        "name": "A2D2T",
        "topic": "a2d2t",
        "qos": "2",
        "datatype": "auto",
        "broker": "3ade52c6.ecefae",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 90,
        "y": 320,
        "wires": [
            [
                "1b19fda8fa56c2bf"
            ]
        ]
    },
    {
        "id": "2f061377a75c72e7",
        "type": "mqtt in",
        "z": "edaab067.2ce7c",
        "name": "RHTPDP",
        "topic": "rhtpdp",
        "qos": "2",
        "datatype": "auto",
        "broker": "3ade52c6.ecefae",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 100,
        "y": 260,
        "wires": [
            [
                "a050caf1443d8599"
            ]
        ]
    },
    {
        "id": "a4eafceea2f7628b",
        "type": "function",
        "z": "edaab067.2ce7c",
        "name": "decode",
        "func": "//decoder goes here\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 180,
        "wires": [
            [
                "14ffaad5.b12e65"
            ]
        ]
    },
    {
        "id": "3decbdcc10b87aa6",
        "type": "function",
        "z": "edaab067.2ce7c",
        "name": "decode",
        "func": "//decoder goes here\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 260,
        "wires": [
            [
                "14ffaad5.b12e65"
            ]
        ]
    },
    {
        "id": "f905b36a6c2f7105",
        "type": "function",
        "z": "edaab067.2ce7c",
        "name": "decode",
        "func": "function toHexString(hex) {\n    for (var bytes = [], c = 0; c < hex.length; c += 2)\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n    return bytes;\n}\nfunction decodeUplink(input) {\n    let hexBytes = toHexString(input);\n    var state = hexBytes[0];\n    var digital1 = hexBytes[1] | hexBytes[2] << 8 | hexBytes[3] << 16 | hexBytes[4] << 24;\n    var digital2 = hexBytes[4] | hexBytes[6] << 8 | hexBytes[7] << 16 | hexBytes[8] << 24;\n    var analog1 = hexBytes[9] | (hexBytes[10] << 8);\n    var analog2 = hexBytes[11] | (hexBytes[12] << 8);\n    var vbat = (hexBytes[13] | (hexBytes[14] << 8)) / 1000;\n    var chipTemp = parseFloat((hexBytes[15] | hexBytes[16] << 8));\n    var temperature = parseFloat((hexBytes[17] | hexBytes[18] << 8)) * 0.0625;\n    var pH = parseInt(2.10997963340122 * ((analog1 - 2) * (5 / 2048)));\n\n    return {\n      \n            pH: pH, analog1: analog1, analog2: analog2, temperature: temperature, vbat: vbat, chipTemp: chipTemp, digital1: digital1, digital2: digital2\n \n    };\n}\nvar data1 = msg.payload.data;\nlet data = decodeUplink(data1);\nmsg.payload.analog1 = data.analog1;\nmsg.payload.analog2 = data.analog2;\nmsg.payload.temperature = data.temperature;\nmsg.payload.vbat = data.vbat;\nmsg.payload.pH = data.pH;\nmsg.payload.chipTemp = data.chipTemp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 320,
        "wires": [
            [
                "14ffaad5.b12e65"
            ]
        ]
    },
    {
        "id": "61853fed5a2f3270",
        "type": "json",
        "z": "edaab067.2ce7c",
        "name": "JSON",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 250,
        "y": 180,
        "wires": [
            [
                "a4eafceea2f7628b"
            ]
        ]
    },
    {
        "id": "a050caf1443d8599",
        "type": "json",
        "z": "edaab067.2ce7c",
        "name": "JSON",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 250,
        "y": 260,
        "wires": [
            [
                "3decbdcc10b87aa6"
            ]
        ]
    },
    {
        "id": "1b19fda8fa56c2bf",
        "type": "json",
        "z": "edaab067.2ce7c",
        "name": "JSON",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 250,
        "y": 320,
        "wires": [
            [
                "f905b36a6c2f7105"
            ]
        ]
    },
    {
        "id": "37640b53.4c5134",
        "type": "http in",
        "z": "c0a3af32.984d7",
        "name": "ADD",
        "url": "/addnode",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 80,
        "wires": [
            [
                "7ec99d77.0ba684"
            ]
        ]
    },
    {
        "id": "7ec99d77.0ba684",
        "type": "template",
        "z": "c0a3af32.984d7",
        "name": "CSS",
        "field": "payload.style",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "*,\n*::before,\n*::after {\n  box-sizing: border-box;\n  -webkit-box-sizing: border-box;\n}\n\nbody {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 0;\n}\n\n.container {\n  height: 60px;\n  background-color: #333333;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-wrap: wrap;\n  flex-wrap: wrap;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  overflow: hidden;\n}\n\n.container .logo {\n  max-width: 250px;\n  padding: 0 10px;\n  overflow: hidden;\n}\n\n.container .logo a {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-wrap: wrap;\n  flex-wrap: wrap;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  height: 60px;\n}\n\n.container .logo a img {\n  max-width: 100%;\n  max-height: 60px;\n}\n\n.container .navbar {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-wrap: wrap;\n  flex-wrap: wrap;\n  -webkit-box-flex: 1;\n  -ms-flex: 1;\n  flex: 1;\n  padding: 0 10px;\n}\n\n.container .navbar ul {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-wrap: wrap;\n  flex-wrap: wrap;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n.container .navbar ul li a {\n  text-decoration: none;\n  color: #999999;\n  font-size: 14px;\n  text-transform: uppercase;\n  display: block;\n  height: 60px;\n  line-height: 60px;\n  cursor: pointer;\n  padding: 0 10px;\n}\n\n.container .navbar ul li a:hover {\n  color: #ffffff;\n  background-color: rgba(23, 23, 23, 0.9);\n}\n\n.container .navbar ul .close {\n  display: none;\n  text-align: right;\n  padding: 10px;\n}\n\n.container .navbar ul .close span {\n  font-size: 40px;\n  display: inline-block;\n  border: 1px solid #cccccc;\n  padding: 0 10px;\n  cursor: pointer;\n}\n\n.container .navbar .icon-bar {\n  padding: 18px 8px;\n  width: 50px;\n  height: 60px;\n  display: none;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n  -ms-flex-direction: column;\n  flex-direction: column;\n  -webkit-box-pack: justify;\n  -ms-flex-pack: justify;\n  justify-content: space-between;\n  cursor: pointer;\n}\n\n.container .navbar .icon-bar i {\n  background-color: #ffffff;\n  height: 2px;\n}\n\n@media only screen and (max-width: 650px) {\n  .container {\n    -webkit-box-pack: justify;\n    -ms-flex-pack: justify;\n    justify-content: space-between;\n  }\n\n  .container .logo {\n    -webkit-box-flex: 1;\n    -ms-flex: 1;\n    flex: 1;\n  }\n\n  .container .navbar {\n    -webkit-box-flex: 0;\n    -ms-flex: 0;\n    flex: 0;\n  }\n\n  .container .navbar ul {\n    -ms-flex-wrap: nowrap;\n    flex-wrap: nowrap;\n    position: fixed;\n    left: 100%;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: column;\n    flex-direction: column;\n    background: #ffffff;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    -webkit-transition: left .3s;\n    -o-transition: left .3s;\n    transition: left .3s;\n  }\n\n  .container .navbar ul li a {\n    padding: 10px;\n    font-size: 16px;\n    height: auto;\n    line-height: normal;\n    color: #555555;\n  }\n\n  .container .navbar ul .close {\n    display: block;\n  }\n\n  .container .navbar .icon-bar {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n  }\n\n  .container .navbar ._Menus-show {\n    left: 0;\n  }\n}\n\n.body {\n  max-width: 700px;\n  margin: 0 auto;\n  padding: 10px;\n}\n\n\n* {\n    box-sizing: border-box;\n    text-rendering: optimizeLegibility;\n}\n\nh3 {\n    display: block;\n    font-size: 20px;\n    font-weight: 300;\n}\n\n.body-container{\n   max-width: 800px;\n  margin: 0 auto;\n  padding: 10px;\n}\n.flex-container {\n    display:  inline-flex;;\n    padding: 10px 5px;\n    box-sizing: border-box;\n    flex-wrap: wrap;\n    gap: 12px;\n}\n\n#field-name{\n    flex: 3;\n}\n\n#add-btn{\n    flex: 1;\n}\n\n\ninput {\n    font: 400 12px/16px \"Roboto\", Helvetica, Arial, sans-serif;\n    border: 1px solid #ccc;\n    background: #FFF;\n    margin: 0 0 5px;\n    padding: 8px;\n}\n\n#add-btn{\n    background: #4CAF50;\n    margin-left: 1rem;\n}\n\n#save-btn{\n    background: #0699d3;\n}\n\n#cancel-btn{\n    background: #ee1b2c;\n}\nbutton {\n    cursor: pointer;\n    border: none;\n    color: #FFF;\n    padding: 8px;\n    margin-left: 10px;\n    height: 34px;\n    border-radius: 3px;\n    width: 4rem;\n}",
        "output": "str",
        "x": 250,
        "y": 80,
        "wires": [
            [
                "e8fd2a02.373bd8"
            ]
        ]
    },
    {
        "id": "e8fd2a02.373bd8",
        "type": "template",
        "z": "c0a3af32.984d7",
        "name": "JS",
        "field": "payload.script",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "function addField() {\n    var form = document.getElementById(\"flex-a\");\n    var fieldName = document.getElementById(\"field-name\").value;\n    if (fieldName.length <= 4) {\n        alert('Field Name Must be atleast 5 characters long')\n    } else {\n        var newfield = document.createElement(\"input\");\n        newfield.setAttribute(\"type\", \"text\");\n        newfield.setAttribute(\"name\", fieldName);\n        newfield.setAttribute(\"placeholder\", fieldName);\n        newfield.setAttribute(\"required\", true);\n        form.appendChild(newfield)\n    }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    let nodes = [];\n    let xhr = new XMLHttpRequest();\n    xhr.onreadystatechange = function () {\n        if (this.readyState == 4 && this.status == 200) {\n           if ((this.responseText).length > 20) {\n                nodes = JSON.parse(xhr.responseText)\n                console.log(\"NODE:: \",nodes);\n           }\n        }\n    };\n    console.log('Loaded');\n    xhr.open(\"GET\", \"/getnodes\", true);\n    xhr.send();\n    var form = document.getElementById(\"form\");\n    form.addEventListener(\"submit\", function (e) {\n        e.preventDefault();\n        document.getElementById(\"save-btn\").setAttribute('disabled',true)\n        var dev = toJSONString(this);\n        let xhr = new XMLHttpRequest();\n        xhr.onreadystatechange = function () {\n            if (this.readyState == 4 && this.status == 200) {\n                console.log(this.responseText);\n                location.reload()\n            }\n        };\n        xhr.open(\"POST\", \"/postnode\", true);\n        let nodePresent = false;\n        nodes.forEach(element=>{\n            if ((element.DevAddr).toLowerCase() == dev.DevAddr.toLowerCase()) {\n                nodePresent = true\n            }\n        })\n\n        if (!nodePresent) {\n            nodes.push(dev)\n            xhr.send(JSON.stringify(nodes));\n            document.getElementById(\"save-btn\").setAttribute('disabled',false)   \n        }else{\n            alert(\"Node Already Exist\")\n            xhr.send(JSON.stringify(nodes));\n        }\n    }, false);\n\n});\n\n\nvar navList = document.getElementById(\"nav-lists\");\nfunction Show() {\n    navList.classList.add(\"_Menus-show\");\n}\n\nfunction Hide() {\n    navList.classList.remove(\"_Menus-show\");\n}\n\nfunction toJSONString(form) {\n    var obj = {};\n    var elements = form.querySelectorAll(\"input, select, textarea\");\n    for (var i = 0; i < elements.length; ++i) {\n        var element = elements[i];\n        var name = element.name;\n        var value = element.value;\n\n        if (name) {\n            obj[name] = value;\n        }\n    }\n\n    return obj;\n}",
        "output": "str",
        "x": 370,
        "y": 80,
        "wires": [
            [
                "7879d00f.c7bc2"
            ]
        ]
    },
    {
        "id": "7879d00f.c7bc2",
        "type": "template",
        "z": "c0a3af32.984d7",
        "name": "HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <style>{{{payload.style}}}</style>\n    <title>Node Man</title>\n</head>\n\n<body>\n\n    <div class=\"container\">\n        <div class=\"logo\" style=\"color:#FFFFFF;\">\n            VipimoLITE\n        </div>\n        <div class=\"navbar\">\n\n            <div class=\"icon-bar\" onclick=\"Show()\">\n                <i></i>\n                <i></i>\n                <i></i>\n            </div>\n\n            <ul id=\"nav-lists\">\n                <li class=\"close\"><span onclick=\"Hide()\">×</span></li>\n                <li><a href=\"/nodeman\">Node Lists</a></li>\n                <li><a href=\"/addnode\">Add Node</a></li>\n            </ul>\n\n        </div>\n    </div>\n    \n    <div class=\"body-container\">\n        <div class=\"flex-container\" style=\"margin-left: 0.5em;\">\n            <input type=\"text\" placeholder=\"Enter Field Name\" id=\"field-name\"  required name=\"field-name\">\n            <button id=\"add-btn\" onclick=\"addField()\">Add</button>\n        </div>\n        \n        <form id=\"form\">\n            <div class=\"flex-container\" id=\"flex-a\" style=\"margin-left: 0.5em;\">\n                <input placeholder=\"DevAddr\" required type=\"text\" name=\"DevAddr\">\n                <input required placeholder=\"Access Token\"  type=\"text\" name=\"Token\">\n                <input placeholder=\"DevType\"required  type=\"text\" name=\"DevType\">\n                <input placeholder=\"Encoding\" required type=\"text\" name=\"Encoding\">\n            </div>\n            <div class=\"flex-container\">\n                <button id=\"save-btn\" type=\"submit\">Save</button>\n                <button id=\"cancel-btn\" type=\"reset\">Cancel</button>\n            </div>\n        </form>\n    </div>\n    <script>{{{payload.script}}}</script>\n</body>\n\n</html>",
        "output": "str",
        "x": 490,
        "y": 80,
        "wires": [
            [
                "12774b01.e56995"
            ]
        ]
    },
    {
        "id": "12774b01.e56995",
        "type": "http response",
        "z": "c0a3af32.984d7",
        "name": "RES",
        "statusCode": "",
        "headers": {},
        "x": 610,
        "y": 80,
        "wires": []
    },
    {
        "id": "d36bdd79.554f3",
        "type": "http in",
        "z": "c0a3af32.984d7",
        "name": "LIST",
        "url": "/nodeman",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "e71d7bd2.05d7a8"
            ]
        ]
    },
    {
        "id": "2f30960f.b36dca",
        "type": "http response",
        "z": "c0a3af32.984d7",
        "name": "RES",
        "statusCode": "",
        "headers": {},
        "x": 610,
        "y": 120,
        "wires": []
    },
    {
        "id": "e71d7bd2.05d7a8",
        "type": "template",
        "z": "c0a3af32.984d7",
        "name": "CSS",
        "field": "payload.style",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "*,\n*::before,\n*::after {\n  box-sizing: border-box;\n  -webkit-box-sizing: border-box;\n}\n\nbody {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 0;\n}\n\n.container {\n  height: 60px;\n  background-color: #333333;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-wrap: wrap;\n  flex-wrap: wrap;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  overflow: hidden;\n}\n\n.container .logo {\n  max-width: 250px;\n  padding: 0 10px;\n  overflow: hidden;\n}\n\n.container .logo a {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-wrap: wrap;\n  flex-wrap: wrap;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  height: 60px;\n}\n\n.container .logo a img {\n  max-width: 100%;\n  max-height: 60px;\n}\n\n.container .navbar {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-wrap: wrap;\n  flex-wrap: wrap;\n  -webkit-box-flex: 1;\n  -ms-flex: 1;\n  flex: 1;\n  padding: 0 10px;\n}\n\n.container .navbar ul {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-wrap: wrap;\n  flex-wrap: wrap;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n.container .navbar ul li a {\n  text-decoration: none;\n  color: #999999;\n  font-size: 14px;\n  text-transform: uppercase;\n  display: block;\n  height: 60px;\n  line-height: 60px;\n  cursor: pointer;\n  padding: 0 10px;\n}\n\n.container .navbar ul li a:hover {\n  color: #ffffff;\n  background-color: rgba(23, 23, 23, 0.9);\n}\n\n.container .navbar ul .close {\n  display: none;\n  text-align: right;\n  padding: 10px;\n}\n\n.container .navbar ul .close span {\n  font-size: 40px;\n  display: inline-block;\n  border: 1px solid #cccccc;\n  padding: 0 10px;\n  cursor: pointer;\n}\n\n.container .navbar .icon-bar {\n  padding: 18px 8px;\n  width: 50px;\n  height: 60px;\n  display: none;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n  -ms-flex-direction: column;\n  flex-direction: column;\n  -webkit-box-pack: justify;\n  -ms-flex-pack: justify;\n  justify-content: space-between;\n  cursor: pointer;\n}\n\n.container .navbar .icon-bar i {\n  background-color: #ffffff;\n  height: 2px;\n}\n\n@media only screen and (max-width: 650px) {\n  .container {\n    -webkit-box-pack: justify;\n    -ms-flex-pack: justify;\n    justify-content: space-between;\n  }\n\n  .container .logo {\n    -webkit-box-flex: 1;\n    -ms-flex: 1;\n    flex: 1;\n  }\n\n  .container .navbar {\n    -webkit-box-flex: 0;\n    -ms-flex: 0;\n    flex: 0;\n  }\n\n  .container .navbar ul {\n    -ms-flex-wrap: nowrap;\n    flex-wrap: nowrap;\n    position: fixed;\n    left: 100%;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: column;\n    flex-direction: column;\n    background: #ffffff;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    -webkit-transition: left .3s;\n    -o-transition: left .3s;\n    transition: left .3s;\n  }\n\n  .container .navbar ul li a {\n    padding: 10px;\n    font-size: 16px;\n    height: auto;\n    line-height: normal;\n    color: #555555;\n  }\n\n  .container .navbar ul .close {\n    display: block;\n  }\n\n  .container .navbar .icon-bar {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n  }\n\n  .container .navbar ._Menus-show {\n    left: 0;\n  }\n}\n\n.body {\n  max-width: 700px;\n  margin: 0 auto;\n  padding: 10px;\n}\n\n\n* {\n    box-sizing: border-box;\n    text-rendering: optimizeLegibility;\n    font-size: small;\n    font-family: 'Courier New', Courier, monospace;\n}\n\nh3 {\n    display: block;\n    font-size: 20px;\n    font-weight: 300;\n}\n\n.body-container{\n  width: 800px;\n  margin: 0 auto;\n  padding: 10px;\n}\n\n.body-list-container{\n  width: 100%;\n  margin: 0 auto;\n  padding: 10px;\n}\n\n.flex-container {\n    display:  inline-flex;;\n    padding: 10px 5px;\n    box-sizing: border-box;\n    flex-wrap: wrap;\n    gap: 12px;\n    margin: 0 auto;\n}\n\n#field-name{\n    flex: 3;\n}\n\n#add-btn{\n    flex: 1;\n}\n\n\ninput {\n    font: 400 12px/16px \"Roboto\", Helvetica, Arial, sans-serif;\n    border: 1px solid #ccc;\n    background: #FFF;\n    margin: 0 0 5px;\n    padding: 8px;\n}\n\n#add-btn{\n    background: #4CAF50;\n    margin-left: 1rem;\n}\n\n#save-btn{\n    background: #0699d3;\n}\n\n#cancel-btn{\n    background: #ee1b2c;\n    margin-left: 0;\n    width: 150px;\n}\nbutton {\n    cursor: pointer;\n    border: none;\n    color: #FFF;\n    padding: 8px;\n    margin-left: 10px;\n    height: 34px;\n    border-radius: 3px;\n    width: 4rem;\n}\n\n.card {\n    /* Add shadows to create the \"card\" effect */\n    transition: 0.3s;\n    padding-left: 1rem;\n    padding-right: 1rem;\n    padding-top: 0.5rem;\n    padding-bottom: 0.5rem;\n    border-radius: 5px;\n    width: 200px;\n    background-color: #ccc;\n  }\n  \n  .card:hover {\n    box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);\n  }",
        "output": "str",
        "x": 250,
        "y": 120,
        "wires": [
            [
                "93891d83.05723"
            ]
        ]
    },
    {
        "id": "93891d83.05723",
        "type": "template",
        "z": "c0a3af32.984d7",
        "name": "JS",
        "field": "payload.script",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "let cardList = document.getElementById(\"flex-a\")\nfunction addNodeProp(data) {\n    data = JSON.parse(data)\n    data.forEach(element => {\n        let card = document.createElement('div')\n        card.setAttribute('class', 'card')\n\n        for (const [key, value] of Object.entries(element)) {\n            let p = document.createElement('p')\n            p.innerText = `${key}: ${value}`\n            card.appendChild(p)\n            console.log(key, value);\n        }\n\n        let delBtnHtml = `<button onClick=deleteNode(\"${element.DevAddr}\") id=\"cancel-btn\">Delete</button>`\n        card.insertAdjacentHTML('beforeend', delBtnHtml)\n        cardList.appendChild(card)\n    });\n}\n\nfunction deleteNode(Addr) {\n    let xhr = new XMLHttpRequest();\n    xhr.onreadystatechange = function () {\n        if (this.readyState == 4 && this.status == 200) {\n            if ((this.responseText).length > 20) {\n                let nodes = [];\n                nodes = JSON.parse(xhr.responseText)\n                nodes.forEach(element => {\n                    console.log(\"NODE1:: \", element);\n                })\n                nodes.forEach(element => {\n                    if ((element.DevAddr).toLowerCase() == Addr.toLowerCase()) {\n                        console.log(\"NODEDEL \", element);\n                        nodes.pop(element)\n                    }\n                })\n                nodes.forEach(element => {\n                    console.log(\"NODE2:: \", element);\n                })\n\n                if (nodes != null || nodes != undefined) {\n                    let xhr = new XMLHttpRequest();\n                    xhr.onreadystatechange = function () {\n                        if (this.readyState == 4 && this.status == 200) {\n                            console.log(this.responseText);\n                        }\n                    };\n                    xhr.open(\"POST\", \"/postnode\", true);\n                    xhr.send(JSON.stringify(nodes));\n                    location.reload()\n                } else {\n                    console.log('Node Undef');\n                }\n            } else {\n                console.log(\"Nothing to Do here\");\n            }\n        }\n    };\n    xhr.open(\"GET\", \"/getnodes\", true);\n    xhr.send();\n}\n\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n\n    let xhttp = new XMLHttpRequest\n    let xhr = new XMLHttpRequest();\n    xhr.onreadystatechange = function () {\n        if (this.readyState == 4 && this.status == 200) {\n            addNodeProp(xhr.responseText)\n        }\n    };\n    xhr.open(\"GET\", \"/getnodes\", true);\n    xhr.send();\n    document.body.addEventListener('click', (e) => {\n        if (e.target && e.target.class === 'del') {\n            let addr = e.target.data - devAddr\n            let newNodes = deleteDev(addr)\n            updateNode(newNodes);\n            location.reload()\n        }\n    })\n}, false);\n\nvar navList = document.getElementById(\"nav-lists\");\nfunction Show() {\n    navList.classList.add(\"_Menus-show\");\n}\n\nfunction Hide() {\n    navList.classList.remove(\"_Menus-show\");\n}\n\n",
        "output": "str",
        "x": 370,
        "y": 120,
        "wires": [
            [
                "6ab2751f.3e09bc"
            ]
        ]
    },
    {
        "id": "6ab2751f.3e09bc",
        "type": "template",
        "z": "c0a3af32.984d7",
        "name": "HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Node Man</title>\n</head>\n\n<body>\n<style>{{{payload.style}}}</style>\n\n    <div class=\"container\">\n        <div class=\"logo\"style=\"color:#FFFFFF;\">\n            VipimoLITE\n        </div>\n        <div class=\"navbar\">\n\n            <div class=\"icon-bar\" onclick=\"Show()\">\n                <i></i>\n                <i></i>\n                <i></i>\n            </div>\n\n            <ul id=\"nav-lists\">\n                <li class=\"close\"><span onclick=\"Hide()\">×</span></li>\n                <li><a href=\"/nodeman\">Node Lists</a></li>\n                <li><a href=\"/addnode\">Add Node</a></li>\n            </ul>\n\n        </div>\n    </div>\n\n    <div class=\"body-list-container\">\n        <div class=\"flex-container\" id=\"flex-a\" style=\"margin-left: 0.5em;\">\n        </div>\n    </div>\n    </div>\n    <script>\n        {{{payload.script}}}\n    </script>\n</body>\n\n</html>",
        "output": "str",
        "x": 490,
        "y": 120,
        "wires": [
            [
                "2f30960f.b36dca"
            ]
        ]
    },
    {
        "id": "edbc0bed.cd40c8",
        "type": "file in",
        "z": "c0a3af32.984d7",
        "name": "Nodes",
        "filename": "/home/pi/Nodes.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 250,
        "y": 160,
        "wires": [
            [
                "f955e483.176a48"
            ]
        ]
    },
    {
        "id": "836efe45.42a4c",
        "type": "http in",
        "z": "c0a3af32.984d7",
        "name": "Nodes",
        "url": "/getnodes",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 160,
        "wires": [
            [
                "edbc0bed.cd40c8"
            ]
        ]
    },
    {
        "id": "36de4392.7d4ccc",
        "type": "http response",
        "z": "c0a3af32.984d7",
        "name": "RES",
        "statusCode": "",
        "headers": {},
        "x": 490,
        "y": 160,
        "wires": []
    },
    {
        "id": "a5623e0d.97b03",
        "type": "file",
        "z": "c0a3af32.984d7",
        "name": "WRT",
        "filename": "/home/pi/Nodes.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 250,
        "y": 200,
        "wires": [
            [
                "66f05a40.fae5f4"
            ]
        ]
    },
    {
        "id": "76bc9971.754858",
        "type": "http in",
        "z": "c0a3af32.984d7",
        "name": "WRE",
        "url": "/postnode",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 200,
        "wires": [
            [
                "a5623e0d.97b03"
            ]
        ]
    },
    {
        "id": "66f05a40.fae5f4",
        "type": "http response",
        "z": "c0a3af32.984d7",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 370,
        "y": 200,
        "wires": []
    },
    {
        "id": "f955e483.176a48",
        "type": "json",
        "z": "c0a3af32.984d7",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 370,
        "y": 160,
        "wires": [
            [
                "36de4392.7d4ccc"
            ]
        ]
    }
]